const app = require("./app");
const conectarDB = require("./db/condb");

require("dotenv").config();

const PORT = process.env.PORT || 7001;

// Fun√ß√£o para iniciar o servidor
const startServer = async () => {
    try {
        // Conectar ao banco de dados
        await conectarDB();
        
        // Iniciar servidor
        app.listen(PORT, () => {
            console.log(`‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó`);
            console.log(`‚ïë  üöÄ Servidor rodando na porta ${PORT}   ‚ïë`);
            console.log(`‚ïë  üìä MongoDB conectado com sucesso      ‚ïë`);
            console.log(`‚ïë  üåê Ambiente: ${process.env.NODE_ENV || 'development'}             ‚ïë`);
            console.log(`‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù`);
        });
    } catch (error) {
        console.error('‚ùå Erro ao iniciar servidor:', error);
        process.exit(1);
    }
};

// Tratamento de erros n√£o capturados
process.on('unhandledRejection', (err) => {
    console.error('‚ùå Unhandled Rejection:', err);
    process.exit(1);
});

process.on('uncaughtException', (err) => {
    console.error('‚ùå Uncaught Exception:', err);
    process.exit(1);
});

// Iniciar o servidor
startServer();
